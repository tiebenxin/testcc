// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: fastconnect.proto

package com.fingerchat.proto.message;

public final class FastConnect {
  private FastConnect() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface FastConnectMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:FastConnectMessage)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string sessionid = 1;</code>
     */
    String getSessionid();
    /**
     * <code>string sessionid = 1;</code>
     */
    com.google.protobuf.ByteString
        getSessionidBytes();

    /**
     * <code>string deviceid = 2;</code>
     */
    String getDeviceid();
    /**
     * <code>string deviceid = 2;</code>
     */
    com.google.protobuf.ByteString
        getDeviceidBytes();

    /**
     * <code>int32 minHeartbeat = 3;</code>
     */
    int getMinHeartbeat();

    /**
     * <code>int32 maxHeartbeat = 4;</code>
     */
    int getMaxHeartbeat();

    /**
     * <code>string id = 5;</code>
     */
    String getId();
    /**
     * <code>string id = 5;</code>
     */
    com.google.protobuf.ByteString
        getIdBytes();
  }
  /**
   * Protobuf type {@code FastConnectMessage}
   */
  public  static final class FastConnectMessage extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:FastConnectMessage)
      FastConnectMessageOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use FastConnectMessage.newBuilder() to construct.
    private FastConnectMessage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private FastConnectMessage() {
      sessionid_ = "";
      deviceid_ = "";
      minHeartbeat_ = 0;
      maxHeartbeat_ = 0;
      id_ = "";
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private FastConnectMessage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              String s = input.readStringRequireUtf8();

              sessionid_ = s;
              break;
            }
            case 18: {
              String s = input.readStringRequireUtf8();

              deviceid_ = s;
              break;
            }
            case 24: {

              minHeartbeat_ = input.readInt32();
              break;
            }
            case 32: {

              maxHeartbeat_ = input.readInt32();
              break;
            }
            case 42: {
              String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return FastConnect.internal_static_FastConnectMessage_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return FastConnect.internal_static_FastConnectMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              FastConnectMessage.class, Builder.class);
    }

    public static final int SESSIONID_FIELD_NUMBER = 1;
    private volatile Object sessionid_;
    /**
     * <code>string sessionid = 1;</code>
     */
    public String getSessionid() {
      Object ref = sessionid_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        sessionid_ = s;
        return s;
      }
    }
    /**
     * <code>string sessionid = 1;</code>
     */
    public com.google.protobuf.ByteString
        getSessionidBytes() {
      Object ref = sessionid_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        sessionid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DEVICEID_FIELD_NUMBER = 2;
    private volatile Object deviceid_;
    /**
     * <code>string deviceid = 2;</code>
     */
    public String getDeviceid() {
      Object ref = deviceid_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        deviceid_ = s;
        return s;
      }
    }
    /**
     * <code>string deviceid = 2;</code>
     */
    public com.google.protobuf.ByteString
        getDeviceidBytes() {
      Object ref = deviceid_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        deviceid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MINHEARTBEAT_FIELD_NUMBER = 3;
    private int minHeartbeat_;
    /**
     * <code>int32 minHeartbeat = 3;</code>
     */
    public int getMinHeartbeat() {
      return minHeartbeat_;
    }

    public static final int MAXHEARTBEAT_FIELD_NUMBER = 4;
    private int maxHeartbeat_;
    /**
     * <code>int32 maxHeartbeat = 4;</code>
     */
    public int getMaxHeartbeat() {
      return maxHeartbeat_;
    }

    public static final int ID_FIELD_NUMBER = 5;
    private volatile Object id_;
    /**
     * <code>string id = 5;</code>
     */
    public String getId() {
      Object ref = id_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <code>string id = 5;</code>
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      Object ref = id_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getSessionidBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, sessionid_);
      }
      if (!getDeviceidBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, deviceid_);
      }
      if (minHeartbeat_ != 0) {
        output.writeInt32(3, minHeartbeat_);
      }
      if (maxHeartbeat_ != 0) {
        output.writeInt32(4, maxHeartbeat_);
      }
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, id_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getSessionidBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, sessionid_);
      }
      if (!getDeviceidBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, deviceid_);
      }
      if (minHeartbeat_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, minHeartbeat_);
      }
      if (maxHeartbeat_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, maxHeartbeat_);
      }
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, id_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof FastConnectMessage)) {
        return super.equals(obj);
      }
      FastConnectMessage other = (FastConnectMessage) obj;

      boolean result = true;
      result = result && getSessionid()
          .equals(other.getSessionid());
      result = result && getDeviceid()
          .equals(other.getDeviceid());
      result = result && (getMinHeartbeat()
          == other.getMinHeartbeat());
      result = result && (getMaxHeartbeat()
          == other.getMaxHeartbeat());
      result = result && getId()
          .equals(other.getId());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SESSIONID_FIELD_NUMBER;
      hash = (53 * hash) + getSessionid().hashCode();
      hash = (37 * hash) + DEVICEID_FIELD_NUMBER;
      hash = (53 * hash) + getDeviceid().hashCode();
      hash = (37 * hash) + MINHEARTBEAT_FIELD_NUMBER;
      hash = (53 * hash) + getMinHeartbeat();
      hash = (37 * hash) + MAXHEARTBEAT_FIELD_NUMBER;
      hash = (53 * hash) + getMaxHeartbeat();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static FastConnectMessage parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static FastConnectMessage parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static FastConnectMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static FastConnectMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static FastConnectMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static FastConnectMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static FastConnectMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static FastConnectMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static FastConnectMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static FastConnectMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static FastConnectMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static FastConnectMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(FastConnectMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code FastConnectMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:FastConnectMessage)
        FastConnectMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return FastConnect.internal_static_FastConnectMessage_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return FastConnect.internal_static_FastConnectMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                FastConnectMessage.class, Builder.class);
      }

      // Construct using com.fingerchat.proto.message.FastConnect.FastConnectMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        sessionid_ = "";

        deviceid_ = "";

        minHeartbeat_ = 0;

        maxHeartbeat_ = 0;

        id_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return FastConnect.internal_static_FastConnectMessage_descriptor;
      }

      public FastConnectMessage getDefaultInstanceForType() {
        return FastConnectMessage.getDefaultInstance();
      }

      public FastConnectMessage build() {
        FastConnectMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public FastConnectMessage buildPartial() {
        FastConnectMessage result = new FastConnectMessage(this);
        result.sessionid_ = sessionid_;
        result.deviceid_ = deviceid_;
        result.minHeartbeat_ = minHeartbeat_;
        result.maxHeartbeat_ = maxHeartbeat_;
        result.id_ = id_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof FastConnectMessage) {
          return mergeFrom((FastConnectMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(FastConnectMessage other) {
        if (other == FastConnectMessage.getDefaultInstance()) return this;
        if (!other.getSessionid().isEmpty()) {
          sessionid_ = other.sessionid_;
          onChanged();
        }
        if (!other.getDeviceid().isEmpty()) {
          deviceid_ = other.deviceid_;
          onChanged();
        }
        if (other.getMinHeartbeat() != 0) {
          setMinHeartbeat(other.getMinHeartbeat());
        }
        if (other.getMaxHeartbeat() != 0) {
          setMaxHeartbeat(other.getMaxHeartbeat());
        }
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        FastConnectMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (FastConnectMessage) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private Object sessionid_ = "";
      /**
       * <code>string sessionid = 1;</code>
       */
      public String getSessionid() {
        Object ref = sessionid_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          sessionid_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string sessionid = 1;</code>
       */
      public com.google.protobuf.ByteString
          getSessionidBytes() {
        Object ref = sessionid_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          sessionid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string sessionid = 1;</code>
       */
      public Builder setSessionid(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        sessionid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string sessionid = 1;</code>
       */
      public Builder clearSessionid() {
        
        sessionid_ = getDefaultInstance().getSessionid();
        onChanged();
        return this;
      }
      /**
       * <code>string sessionid = 1;</code>
       */
      public Builder setSessionidBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        sessionid_ = value;
        onChanged();
        return this;
      }

      private Object deviceid_ = "";
      /**
       * <code>string deviceid = 2;</code>
       */
      public String getDeviceid() {
        Object ref = deviceid_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          deviceid_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string deviceid = 2;</code>
       */
      public com.google.protobuf.ByteString
          getDeviceidBytes() {
        Object ref = deviceid_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          deviceid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string deviceid = 2;</code>
       */
      public Builder setDeviceid(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        deviceid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string deviceid = 2;</code>
       */
      public Builder clearDeviceid() {
        
        deviceid_ = getDefaultInstance().getDeviceid();
        onChanged();
        return this;
      }
      /**
       * <code>string deviceid = 2;</code>
       */
      public Builder setDeviceidBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        deviceid_ = value;
        onChanged();
        return this;
      }

      private int minHeartbeat_ ;
      /**
       * <code>int32 minHeartbeat = 3;</code>
       */
      public int getMinHeartbeat() {
        return minHeartbeat_;
      }
      /**
       * <code>int32 minHeartbeat = 3;</code>
       */
      public Builder setMinHeartbeat(int value) {
        
        minHeartbeat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 minHeartbeat = 3;</code>
       */
      public Builder clearMinHeartbeat() {
        
        minHeartbeat_ = 0;
        onChanged();
        return this;
      }

      private int maxHeartbeat_ ;
      /**
       * <code>int32 maxHeartbeat = 4;</code>
       */
      public int getMaxHeartbeat() {
        return maxHeartbeat_;
      }
      /**
       * <code>int32 maxHeartbeat = 4;</code>
       */
      public Builder setMaxHeartbeat(int value) {
        
        maxHeartbeat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 maxHeartbeat = 4;</code>
       */
      public Builder clearMaxHeartbeat() {
        
        maxHeartbeat_ = 0;
        onChanged();
        return this;
      }

      private Object id_ = "";
      /**
       * <code>string id = 5;</code>
       */
      public String getId() {
        Object ref = id_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string id = 5;</code>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string id = 5;</code>
       */
      public Builder setId(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string id = 5;</code>
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <code>string id = 5;</code>
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:FastConnectMessage)
    }

    // @@protoc_insertion_point(class_scope:FastConnectMessage)
    private static final FastConnectMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new FastConnectMessage();
    }

    public static FastConnectMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<FastConnectMessage>
        PARSER = new com.google.protobuf.AbstractParser<FastConnectMessage>() {
      public FastConnectMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new FastConnectMessage(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<FastConnectMessage> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<FastConnectMessage> getParserForType() {
      return PARSER;
    }

    public FastConnectMessage getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface FastConnectOkMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:FastConnectOkMessage)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 minHeartbeat = 1;</code>
     */
    int getMinHeartbeat();
  }
  /**
   * Protobuf type {@code FastConnectOkMessage}
   */
  public  static final class FastConnectOkMessage extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:FastConnectOkMessage)
      FastConnectOkMessageOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use FastConnectOkMessage.newBuilder() to construct.
    private FastConnectOkMessage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private FastConnectOkMessage() {
      minHeartbeat_ = 0;
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private FastConnectOkMessage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              minHeartbeat_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return FastConnect.internal_static_FastConnectOkMessage_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return FastConnect.internal_static_FastConnectOkMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              FastConnectOkMessage.class, Builder.class);
    }

    public static final int MINHEARTBEAT_FIELD_NUMBER = 1;
    private int minHeartbeat_;
    /**
     * <code>int32 minHeartbeat = 1;</code>
     */
    public int getMinHeartbeat() {
      return minHeartbeat_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (minHeartbeat_ != 0) {
        output.writeInt32(1, minHeartbeat_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (minHeartbeat_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, minHeartbeat_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof FastConnectOkMessage)) {
        return super.equals(obj);
      }
      FastConnectOkMessage other = (FastConnectOkMessage) obj;

      boolean result = true;
      result = result && (getMinHeartbeat()
          == other.getMinHeartbeat());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + MINHEARTBEAT_FIELD_NUMBER;
      hash = (53 * hash) + getMinHeartbeat();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static FastConnectOkMessage parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static FastConnectOkMessage parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static FastConnectOkMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static FastConnectOkMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static FastConnectOkMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static FastConnectOkMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static FastConnectOkMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static FastConnectOkMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static FastConnectOkMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static FastConnectOkMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static FastConnectOkMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static FastConnectOkMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(FastConnectOkMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code FastConnectOkMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:FastConnectOkMessage)
        FastConnectOkMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return FastConnect.internal_static_FastConnectOkMessage_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return FastConnect.internal_static_FastConnectOkMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                FastConnectOkMessage.class, Builder.class);
      }

      // Construct using com.fingerchat.proto.message.FastConnect.FastConnectOkMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        minHeartbeat_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return FastConnect.internal_static_FastConnectOkMessage_descriptor;
      }

      public FastConnectOkMessage getDefaultInstanceForType() {
        return FastConnectOkMessage.getDefaultInstance();
      }

      public FastConnectOkMessage build() {
        FastConnectOkMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public FastConnectOkMessage buildPartial() {
        FastConnectOkMessage result = new FastConnectOkMessage(this);
        result.minHeartbeat_ = minHeartbeat_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof FastConnectOkMessage) {
          return mergeFrom((FastConnectOkMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(FastConnectOkMessage other) {
        if (other == FastConnectOkMessage.getDefaultInstance()) return this;
        if (other.getMinHeartbeat() != 0) {
          setMinHeartbeat(other.getMinHeartbeat());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        FastConnectOkMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (FastConnectOkMessage) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int minHeartbeat_ ;
      /**
       * <code>int32 minHeartbeat = 1;</code>
       */
      public int getMinHeartbeat() {
        return minHeartbeat_;
      }
      /**
       * <code>int32 minHeartbeat = 1;</code>
       */
      public Builder setMinHeartbeat(int value) {
        
        minHeartbeat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 minHeartbeat = 1;</code>
       */
      public Builder clearMinHeartbeat() {
        
        minHeartbeat_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:FastConnectOkMessage)
    }

    // @@protoc_insertion_point(class_scope:FastConnectOkMessage)
    private static final FastConnectOkMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new FastConnectOkMessage();
    }

    public static FastConnectOkMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<FastConnectOkMessage>
        PARSER = new com.google.protobuf.AbstractParser<FastConnectOkMessage>() {
      public FastConnectOkMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new FastConnectOkMessage(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<FastConnectOkMessage> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<FastConnectOkMessage> getParserForType() {
      return PARSER;
    }

    public FastConnectOkMessage getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_FastConnectMessage_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_FastConnectMessage_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_FastConnectOkMessage_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_FastConnectOkMessage_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\021fastconnect.proto\"q\n\022FastConnectMessag" +
      "e\022\021\n\tsessionid\030\001 \001(\t\022\020\n\010deviceid\030\002 \001(\t\022\024" +
      "\n\014minHeartbeat\030\003 \001(\005\022\024\n\014maxHeartbeat\030\004 \001" +
      "(\005\022\n\n\002id\030\005 \001(\t\",\n\024FastConnectOkMessage\022\024" +
      "\n\014minHeartbeat\030\001 \001(\005B+\n\034com.fingerchat.p" +
      "roto.messageB\013FastConnectb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_FastConnectMessage_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_FastConnectMessage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_FastConnectMessage_descriptor,
        new String[] { "Sessionid", "Deviceid", "MinHeartbeat", "MaxHeartbeat", "Id", });
    internal_static_FastConnectOkMessage_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_FastConnectOkMessage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_FastConnectOkMessage_descriptor,
        new String[] { "MinHeartbeat", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
