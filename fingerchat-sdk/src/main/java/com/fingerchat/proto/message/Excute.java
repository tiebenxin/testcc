// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: excute.proto

package com.fingerchat.proto.message;

public final class Excute {
  private Excute() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code ExcuteType}
   */
  public enum ExcuteType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     *根据用户名查电话
     * </pre>
     *
     * <code>QUER_USER_PHONE = 0;</code>
     */
    QUER_USER_PHONE(0),
    /**
     * <pre>
     *检验验证码
     * </pre>
     *
     * <code>CHECK_VALIDATECODE = 1;</code>
     */
    CHECK_VALIDATECODE(1),
    /**
     * <pre>
     *查询离线数据
     * </pre>
     *
     * <code>QUERY_OFFLINE = 2;</code>
     */
    QUERY_OFFLINE(2),
    /**
     * <pre>
     *个人自定义表情保存
     * </pre>
     *
     * <code>EMOTICON_SAVE = 3;</code>
     */
    EMOTICON_SAVE(3),
    /**
     * <pre>
     *个人自定义表情查询
     * </pre>
     *
     * <code>EMOTICON_QUERY = 4;</code>
     */
    EMOTICON_QUERY(4),
    /**
     * <pre>
     *个人自定义表情删除
     * </pre>
     *
     * <code>EMOTICON_DELETE = 5;</code>
     */
    EMOTICON_DELETE(5),
    /**
     * <pre>
     *个人自定义表情移动到最前
     * </pre>
     *
     * <code>EMOTICON_TOFIRST = 6;</code>
     */
    EMOTICON_TOFIRST(6),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     *根据用户名查电话
     * </pre>
     *
     * <code>QUER_USER_PHONE = 0;</code>
     */
    public static final int QUER_USER_PHONE_VALUE = 0;
    /**
     * <pre>
     *检验验证码
     * </pre>
     *
     * <code>CHECK_VALIDATECODE = 1;</code>
     */
    public static final int CHECK_VALIDATECODE_VALUE = 1;
    /**
     * <pre>
     *查询离线数据
     * </pre>
     *
     * <code>QUERY_OFFLINE = 2;</code>
     */
    public static final int QUERY_OFFLINE_VALUE = 2;
    /**
     * <pre>
     *个人自定义表情保存
     * </pre>
     *
     * <code>EMOTICON_SAVE = 3;</code>
     */
    public static final int EMOTICON_SAVE_VALUE = 3;
    /**
     * <pre>
     *个人自定义表情查询
     * </pre>
     *
     * <code>EMOTICON_QUERY = 4;</code>
     */
    public static final int EMOTICON_QUERY_VALUE = 4;
    /**
     * <pre>
     *个人自定义表情删除
     * </pre>
     *
     * <code>EMOTICON_DELETE = 5;</code>
     */
    public static final int EMOTICON_DELETE_VALUE = 5;
    /**
     * <pre>
     *个人自定义表情移动到最前
     * </pre>
     *
     * <code>EMOTICON_TOFIRST = 6;</code>
     */
    public static final int EMOTICON_TOFIRST_VALUE = 6;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static ExcuteType valueOf(int value) {
      return forNumber(value);
    }

    public static ExcuteType forNumber(int value) {
      switch (value) {
        case 0: return QUER_USER_PHONE;
        case 1: return CHECK_VALIDATECODE;
        case 2: return QUERY_OFFLINE;
        case 3: return EMOTICON_SAVE;
        case 4: return EMOTICON_QUERY;
        case 5: return EMOTICON_DELETE;
        case 6: return EMOTICON_TOFIRST;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ExcuteType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ExcuteType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ExcuteType>() {
            public ExcuteType findValueByNumber(int number) {
              return ExcuteType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return Excute.getDescriptor().getEnumTypes().get(0);
    }

    private static final ExcuteType[] VALUES = values();

    public static ExcuteType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ExcuteType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:ExcuteType)
  }

  public interface ExcuteMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ExcuteMessage)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *业务处理类型
     * </pre>
     *
     * <code>.ExcuteType excuteType = 1;</code>
     */
    int getExcuteTypeValue();
    /**
     * <pre>
     *业务处理类型
     * </pre>
     *
     * <code>.ExcuteType excuteType = 1;</code>
     */
    ExcuteType getExcuteType();

    /**
     * <pre>
     *响应码
     * </pre>
     *
     * <code>int32 code = 2;</code>
     */
    int getCode();

    /**
     * <pre>
     *参数
     * </pre>
     *
     * <code>string param = 3;</code>
     */
    String getParam();
    /**
     * <pre>
     *参数
     * </pre>
     *
     * <code>string param = 3;</code>
     */
    com.google.protobuf.ByteString
        getParamBytes();

    /**
     * <pre>
     *结果
     * </pre>
     *
     * <code>string result = 4;</code>
     */
    String getResult();
    /**
     * <pre>
     *结果
     * </pre>
     *
     * <code>string result = 4;</code>
     */
    com.google.protobuf.ByteString
        getResultBytes();
  }
  /**
   * Protobuf type {@code ExcuteMessage}
   */
  public  static final class ExcuteMessage extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:ExcuteMessage)
      ExcuteMessageOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ExcuteMessage.newBuilder() to construct.
    private ExcuteMessage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ExcuteMessage() {
      excuteType_ = 0;
      code_ = 0;
      param_ = "";
      result_ = "";
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ExcuteMessage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();

              excuteType_ = rawValue;
              break;
            }
            case 16: {

              code_ = input.readInt32();
              break;
            }
            case 26: {
              String s = input.readStringRequireUtf8();

              param_ = s;
              break;
            }
            case 34: {
              String s = input.readStringRequireUtf8();

              result_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Excute.internal_static_ExcuteMessage_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Excute.internal_static_ExcuteMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ExcuteMessage.class, Builder.class);
    }

    public static final int EXCUTETYPE_FIELD_NUMBER = 1;
    private int excuteType_;
    /**
     * <pre>
     *业务处理类型
     * </pre>
     *
     * <code>.ExcuteType excuteType = 1;</code>
     */
    public int getExcuteTypeValue() {
      return excuteType_;
    }
    /**
     * <pre>
     *业务处理类型
     * </pre>
     *
     * <code>.ExcuteType excuteType = 1;</code>
     */
    public ExcuteType getExcuteType() {
      ExcuteType result = ExcuteType.valueOf(excuteType_);
      return result == null ? ExcuteType.UNRECOGNIZED : result;
    }

    public static final int CODE_FIELD_NUMBER = 2;
    private int code_;
    /**
     * <pre>
     *响应码
     * </pre>
     *
     * <code>int32 code = 2;</code>
     */
    public int getCode() {
      return code_;
    }

    public static final int PARAM_FIELD_NUMBER = 3;
    private volatile Object param_;
    /**
     * <pre>
     *参数
     * </pre>
     *
     * <code>string param = 3;</code>
     */
    public String getParam() {
      Object ref = param_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        param_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *参数
     * </pre>
     *
     * <code>string param = 3;</code>
     */
    public com.google.protobuf.ByteString
        getParamBytes() {
      Object ref = param_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        param_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int RESULT_FIELD_NUMBER = 4;
    private volatile Object result_;
    /**
     * <pre>
     *结果
     * </pre>
     *
     * <code>string result = 4;</code>
     */
    public String getResult() {
      Object ref = result_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        result_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *结果
     * </pre>
     *
     * <code>string result = 4;</code>
     */
    public com.google.protobuf.ByteString
        getResultBytes() {
      Object ref = result_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        result_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (excuteType_ != ExcuteType.QUER_USER_PHONE.getNumber()) {
        output.writeEnum(1, excuteType_);
      }
      if (code_ != 0) {
        output.writeInt32(2, code_);
      }
      if (!getParamBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, param_);
      }
      if (!getResultBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, result_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (excuteType_ != ExcuteType.QUER_USER_PHONE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, excuteType_);
      }
      if (code_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, code_);
      }
      if (!getParamBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, param_);
      }
      if (!getResultBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, result_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof ExcuteMessage)) {
        return super.equals(obj);
      }
      ExcuteMessage other = (ExcuteMessage) obj;

      boolean result = true;
      result = result && excuteType_ == other.excuteType_;
      result = result && (getCode()
          == other.getCode());
      result = result && getParam()
          .equals(other.getParam());
      result = result && getResult()
          .equals(other.getResult());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + EXCUTETYPE_FIELD_NUMBER;
      hash = (53 * hash) + excuteType_;
      hash = (37 * hash) + CODE_FIELD_NUMBER;
      hash = (53 * hash) + getCode();
      hash = (37 * hash) + PARAM_FIELD_NUMBER;
      hash = (53 * hash) + getParam().hashCode();
      hash = (37 * hash) + RESULT_FIELD_NUMBER;
      hash = (53 * hash) + getResult().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static ExcuteMessage parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ExcuteMessage parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ExcuteMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ExcuteMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ExcuteMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ExcuteMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ExcuteMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ExcuteMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static ExcuteMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static ExcuteMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static ExcuteMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ExcuteMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(ExcuteMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ExcuteMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ExcuteMessage)
        ExcuteMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Excute.internal_static_ExcuteMessage_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Excute.internal_static_ExcuteMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ExcuteMessage.class, Builder.class);
      }

      // Construct using com.fingerchat.proto.message.Excute.ExcuteMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        excuteType_ = 0;

        code_ = 0;

        param_ = "";

        result_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Excute.internal_static_ExcuteMessage_descriptor;
      }

      public ExcuteMessage getDefaultInstanceForType() {
        return ExcuteMessage.getDefaultInstance();
      }

      public ExcuteMessage build() {
        ExcuteMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public ExcuteMessage buildPartial() {
        ExcuteMessage result = new ExcuteMessage(this);
        result.excuteType_ = excuteType_;
        result.code_ = code_;
        result.param_ = param_;
        result.result_ = result_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ExcuteMessage) {
          return mergeFrom((ExcuteMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ExcuteMessage other) {
        if (other == ExcuteMessage.getDefaultInstance()) return this;
        if (other.excuteType_ != 0) {
          setExcuteTypeValue(other.getExcuteTypeValue());
        }
        if (other.getCode() != 0) {
          setCode(other.getCode());
        }
        if (!other.getParam().isEmpty()) {
          param_ = other.param_;
          onChanged();
        }
        if (!other.getResult().isEmpty()) {
          result_ = other.result_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ExcuteMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ExcuteMessage) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int excuteType_ = 0;
      /**
       * <pre>
       *业务处理类型
       * </pre>
       *
       * <code>.ExcuteType excuteType = 1;</code>
       */
      public int getExcuteTypeValue() {
        return excuteType_;
      }
      /**
       * <pre>
       *业务处理类型
       * </pre>
       *
       * <code>.ExcuteType excuteType = 1;</code>
       */
      public Builder setExcuteTypeValue(int value) {
        excuteType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *业务处理类型
       * </pre>
       *
       * <code>.ExcuteType excuteType = 1;</code>
       */
      public ExcuteType getExcuteType() {
        ExcuteType result = ExcuteType.valueOf(excuteType_);
        return result == null ? ExcuteType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       *业务处理类型
       * </pre>
       *
       * <code>.ExcuteType excuteType = 1;</code>
       */
      public Builder setExcuteType(ExcuteType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        excuteType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *业务处理类型
       * </pre>
       *
       * <code>.ExcuteType excuteType = 1;</code>
       */
      public Builder clearExcuteType() {
        
        excuteType_ = 0;
        onChanged();
        return this;
      }

      private int code_ ;
      /**
       * <pre>
       *响应码
       * </pre>
       *
       * <code>int32 code = 2;</code>
       */
      public int getCode() {
        return code_;
      }
      /**
       * <pre>
       *响应码
       * </pre>
       *
       * <code>int32 code = 2;</code>
       */
      public Builder setCode(int value) {
        
        code_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *响应码
       * </pre>
       *
       * <code>int32 code = 2;</code>
       */
      public Builder clearCode() {
        
        code_ = 0;
        onChanged();
        return this;
      }

      private Object param_ = "";
      /**
       * <pre>
       *参数
       * </pre>
       *
       * <code>string param = 3;</code>
       */
      public String getParam() {
        Object ref = param_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          param_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *参数
       * </pre>
       *
       * <code>string param = 3;</code>
       */
      public com.google.protobuf.ByteString
          getParamBytes() {
        Object ref = param_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          param_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *参数
       * </pre>
       *
       * <code>string param = 3;</code>
       */
      public Builder setParam(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        param_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *参数
       * </pre>
       *
       * <code>string param = 3;</code>
       */
      public Builder clearParam() {
        
        param_ = getDefaultInstance().getParam();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *参数
       * </pre>
       *
       * <code>string param = 3;</code>
       */
      public Builder setParamBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        param_ = value;
        onChanged();
        return this;
      }

      private Object result_ = "";
      /**
       * <pre>
       *结果
       * </pre>
       *
       * <code>string result = 4;</code>
       */
      public String getResult() {
        Object ref = result_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          result_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *结果
       * </pre>
       *
       * <code>string result = 4;</code>
       */
      public com.google.protobuf.ByteString
          getResultBytes() {
        Object ref = result_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          result_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *结果
       * </pre>
       *
       * <code>string result = 4;</code>
       */
      public Builder setResult(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        result_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *结果
       * </pre>
       *
       * <code>string result = 4;</code>
       */
      public Builder clearResult() {
        
        result_ = getDefaultInstance().getResult();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *结果
       * </pre>
       *
       * <code>string result = 4;</code>
       */
      public Builder setResultBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        result_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:ExcuteMessage)
    }

    // @@protoc_insertion_point(class_scope:ExcuteMessage)
    private static final ExcuteMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ExcuteMessage();
    }

    public static ExcuteMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ExcuteMessage>
        PARSER = new com.google.protobuf.AbstractParser<ExcuteMessage>() {
      public ExcuteMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ExcuteMessage(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ExcuteMessage> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<ExcuteMessage> getParserForType() {
      return PARSER;
    }

    public ExcuteMessage getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ExcuteMessage_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ExcuteMessage_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\014excute.proto\"]\n\rExcuteMessage\022\037\n\nexcut" +
      "eType\030\001 \001(\0162\013.ExcuteType\022\014\n\004code\030\002 \001(\005\022\r" +
      "\n\005param\030\003 \001(\t\022\016\n\006result\030\004 \001(\t*\236\001\n\nExcute" +
      "Type\022\023\n\017QUER_USER_PHONE\020\000\022\026\n\022CHECK_VALID" +
      "ATECODE\020\001\022\021\n\rQUERY_OFFLINE\020\002\022\021\n\rEMOTICON" +
      "_SAVE\020\003\022\022\n\016EMOTICON_QUERY\020\004\022\023\n\017EMOTICON_" +
      "DELETE\020\005\022\024\n\020EMOTICON_TOFIRST\020\006B&\n\034com.fi" +
      "ngerchat.proto.messageB\006Excuteb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_ExcuteMessage_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_ExcuteMessage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ExcuteMessage_descriptor,
        new String[] { "ExcuteType", "Code", "Param", "Result", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
